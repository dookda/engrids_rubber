services:
  postgis:
    platform: linux/amd64
    image: postgis/postgis
    container_name: rub_postgis
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=rub1234
      - POSTGRES_DB=postgres
    ports:
      - 5400:5432
    volumes:
      - ./postgis:/docker-entrypoint-initdb.d
    networks:
      - rub-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10

  nodejs:
    image: node:latest
    container_name: rub_nodejs
    restart: always
    working_dir: /usr/src/app
    environment:
      - NODE_ENV=development
      - DB_HOST=postgis
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=rub1234
      - DB_NAME=rub
    depends_on:
      postgis:
        condition: service_healthy
    volumes:
      - ./nodejs:/usr/src/app
    ports:
      - "3300:3000"
    networks:
      - rub-network
    command: sh -c "npm i && npm i -g nodemon && nodemon"

#   react:
#     image: node:latest
#     container_name: rub_react
#     restart: always
#     working_dir: /usr/src/app
#     environment:
#       - NODE_ENV=development
#       - REACT_APP_API_URL=http://nodejs:3000 
#     depends_on:
#       - nodejs
#     volumes:
#       - ./react:/usr/src/app
#     ports:
#       - "3000:5173" 
#     networks:
#       - rub-network
#     command: sh -c "npm i && npm run dev" 
networks:
  rub-network:
    driver: bridge
