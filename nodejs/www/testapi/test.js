document.getElementById("run-code").addEventListener("click", async () => {
    let [tab] = await chrome.tabs.query({ active: true, currentWindow: true });

    chrome.scripting.executeScript({
        target: { tabId: tab.id },
        func: () => {
            // 1. JSON for province names
            const provinces = [
                { "code": "00", "name": "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î" },
                { "code": "81", "name": "‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà" },
                { "code": "10", "name": "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£" },
                { "code": "71", "name": "‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "46", "name": "‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå" },
                { "code": "62", "name": "‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£" },
                { "code": "40", "name": "‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô" },
                { "code": "22", "name": "‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "24", "name": "‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤" },
                { "code": "20", "name": "‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "18", "name": "‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó" },
                { "code": "36", "name": "‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥" },
                { "code": "86", "name": "‡∏ä‡∏∏‡∏°‡∏û‡∏£" },
                { "code": "57", "name": "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢" },
                { "code": "50", "name": "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà" },
                { "code": "92", "name": "‡∏ï‡∏£‡∏±‡∏á" },
                { "code": "23", "name": "‡∏ï‡∏£‡∏≤‡∏î" },
                { "code": "63", "name": "‡∏ï‡∏≤‡∏Å" },
                { "code": "26", "name": "‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å" },
                { "code": "73", "name": "‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°" },
                { "code": "48", "name": "‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°" },
                { "code": "30", "name": "‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤" },
                { "code": "80", "name": "‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä" },
                { "code": "60", "name": "‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå" },
                { "code": "12", "name": "‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "96", "name": "‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™" },
                { "code": "55", "name": "‡∏ô‡πà‡∏≤‡∏ô" },
                { "code": "38", "name": "‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨" },
                { "code": "31", "name": "‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå" },
                { "code": "13", "name": "‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ" },
                { "code": "77", "name": "‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå" },
                { "code": "25", "name": "‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "94", "name": "‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ" },
                { "code": "14", "name": "‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤" },
                { "code": "56", "name": "‡∏û‡∏∞‡πÄ‡∏¢‡∏≤" },
                { "code": "82", "name": "‡∏û‡∏±‡∏á‡∏á‡∏≤" },
                { "code": "93", "name": "‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á" },
                { "code": "66", "name": "‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£" },
                { "code": "65", "name": "‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å" },
                { "code": "76", "name": "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "67", "name": "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå" },
                { "code": "54", "name": "‡πÅ‡∏û‡∏£‡πà" },
                { "code": "83", "name": "‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï" },
                { "code": "44", "name": "‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°" },
                { "code": "49", "name": "‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£" },
                { "code": "58", "name": "‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô" },
                { "code": "35", "name": "‡∏¢‡πÇ‡∏™‡∏ò‡∏£" },
                { "code": "95", "name": "‡∏¢‡∏∞‡∏•‡∏≤" },
                { "code": "45", "name": "‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î" },
                { "code": "85", "name": "‡∏£‡∏∞‡∏ô‡∏≠‡∏á" },
                { "code": "21", "name": "‡∏£‡∏∞‡∏¢‡∏≠‡∏á" },
                { "code": "70", "name": "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "16", "name": "‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "52", "name": "‡∏•‡∏≥‡∏õ‡∏≤‡∏á" },
                { "code": "51", "name": "‡∏•‡∏≥‡∏û‡∏π‡∏ô" },
                { "code": "42", "name": "‡πÄ‡∏•‡∏¢" },
                { "code": "33", "name": "‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©" },
                { "code": "47", "name": "‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£" },
                { "code": "90", "name": "‡∏™‡∏á‡∏Ç‡∏•‡∏≤" },
                { "code": "91", "name": "‡∏™‡∏ï‡∏π‡∏•" },
                { "code": "11", "name": "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£" },
                { "code": "75", "name": "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏á‡∏Ñ‡∏£‡∏≤‡∏°" },
                { "code": "74", "name": "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£" },
                { "code": "27", "name": "‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß" },
                { "code": "19", "name": "‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "17", "name": "‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "64", "name": "‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢" },
                { "code": "72", "name": "‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ" },
                { "code": "84", "name": "‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ" },
                { "code": "32", "name": "‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå" },
                { "code": "43", "name": "‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢" },
                { "code": "39", "name": "‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π" },
                { "code": "15", "name": "‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á" },
                { "code": "37", "name": "‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç" },
                { "code": "41", "name": "‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ" },
                { "code": "53", "name": "‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå" },
                { "code": "61", "name": "‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ" },
                { "code": "34", "name": "‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ" }
            ];

            // get page URL
            const pageUrl = window.location.href;
            // Check if the URL contains 'landsmaps.dol.go.th'
            if (!pageUrl.includes('landsmaps.dol.go.th')) {
                console.error('This script should only be run on landsmaps.dol.go.th');
                alert('This script should only be run on landsmaps.dol.go.th :)');
                return;
            }

            // 2. Sample amphoe data
            var amphur = sessionStorage.getItem('amphur');
            const data = amphur ? JSON.parse(amphur).result : null;

            var userinfo = sessionStorage.getItem('userinfo');
            const API_TOKEN = userinfo ? JSON.parse(userinfo).access_token : null;

            // 3. Create UI elements
            const container = document.createElement('div');
            container.style.padding = '15px';
            container.style.borderBottom = '2px solid #ccc';
            container.style.backgroundColor = '#f0f0f0';
            container.style.position = 'relative';
            container.style.zIndex = '9999';
            container.style.fontFamily = 'Arial, sans-serif';

            // 3. Add heading
            const heading = document.createElement('h3');
            heading.textContent = 'üìç ‡πÄ‡∏≠‡∏≤‡∏à‡∏£‡∏¥‡∏á‡∏•‡∏∞‡∏ô‡∏∞';
            heading.style.margin = '0 0 10px 0';
            container.appendChild(heading);

            const pvLabel = document.createElement('label');
            pvLabel.textContent = '‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î: ';
            pvLabel.htmlFor = 'pvSelect';
            container.appendChild(pvLabel);

            const pvSelect = document.createElement('select');
            pvSelect.id = 'pvSelect';
            pvSelect.style.margin = '0 20px 10px 10px';
            container.appendChild(pvSelect);

            const amLabel = document.createElement('label');
            amLabel.textContent = '‡∏≠‡∏≥‡πÄ‡∏†‡∏≠: ';
            amLabel.htmlFor = 'amSelect';
            container.appendChild(amLabel);

            const amSelect = document.createElement('select');
            amSelect.id = 'amSelect';
            amSelect.style.margin = '0 0 10px 10px';
            container.appendChild(amSelect);

            // Insert at top of body
            document.body.insertBefore(container, document.body.firstChild);

            // Populate provinces
            provinces.forEach(prov => {
                const opt = document.createElement('option');
                opt.value = prov.code;
                opt.textContent = prov.name;
                pvSelect.appendChild(opt);
            });

            // Event: province change updates amphoes
            pvSelect.addEventListener('change', () => {
                const selectedPv = pvSelect.value;
                amSelect.innerHTML = '<option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ --</option>';
                data.filter(d => d.pvcode === selectedPv).forEach(d => {
                    const opt = document.createElement('option');
                    opt.value = d.amcode;
                    opt.textContent = d.amnamethai;
                    amSelect.appendChild(opt);
                });
            });

            // add input for parcel number
            const parcelLabel = document.createElement('label');
            parcelLabel.textContent = '‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô: ';
            parcelLabel.htmlFor = 'parcelInput';
            const parcelInput = document.createElement('input');
            parcelInput.id = 'parcelInput';
            parcelInput.type = 'text';
            parcelInput.placeholder = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô';
            parcelInput.style.margin = '0 10px 10px 10px';
            container.appendChild(parcelLabel);
            container.appendChild(parcelInput);

            // add button 
            const searchButton = document.createElement('button');
            searchButton.textContent = 'üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô';
            searchButton.id = 'searchButton';
            searchButton.style.margin = '0 0 10px 10px';
            container.appendChild(searchButton);

            searchButton.addEventListener('click', async () => {
                const selectedPv = pvSelect.value;
                const selectedAm = amSelect.value;
                const parcelNumber = parcelInput.value.trim();
                if (!selectedPv || selectedPv === '00') {
                    console.log('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î');
                    return;
                }
                if (!selectedAm) {
                    console.log('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠');
                    return;
                }
                if (!parcelNumber) {
                    console.log('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô');
                    return;
                }

                if (selectedPv && selectedAm) {
                    const amphoe = data.find(d => d.pvcode === selectedPv && d.amcode === selectedAm);
                    if (amphoe) {
                        console.log(`Selected Province: ${provinces.find(p => p.code === selectedPv).name}`);
                        console.log(`Selected Amphoe: ${amphoe.amnamethai}`);
                        // Call the API with the selected province and amphoe
                        try {
                            await getPacelByPacelNumber(selectedPv, selectedAm, parcelNumber); // Replace '123456' with actual parcel number
                            console.log('API call successful');
                        } catch (error) {
                            console.error('Error fetching parcel data:', error);
                        }
                    } else {
                        console.log('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
                    }
                } else {
                    console.log('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏≠‡∏≥‡πÄ‡∏†‡∏≠');
                }
            });

            const instructions = document.createElement('p');
            container.appendChild(instructions)
            const divTxt = document.createElement('div');
            divTxt.id = 'copyDiv';
            divTxt.style.cursor = 'pointer';
            divTxt.style.padding = '10px';
            divTxt.style.background = '#f9f9f9';
            divTxt.style.border = '1px solid #ddd';

            // Add it to the body
            container.appendChild(divTxt)

            // Define the copy function
            function copyTextFromDiv() {
                const text = document.getElementById("copyDiv").innerText;
                navigator.clipboard.writeText(text)
                    .then(() => alert("Copied to clipboard!"))
                    .catch(err => alert("Failed to copy"));
            }

            async function getPacelByPacelNumber(province, amphur, parcelnumber) {
                divTxt.innerText = "";
                const parcelRes = await fetch(
                    `https://landsmaps.dol.go.th/apiService/LandsMaps/GetParcelByParcelNo/${province}/${amphur}/${parcelnumber}`,
                    {
                        headers: {
                            'Authorization': `Bearer ${API_TOKEN}`,
                            'Accept': 'application/json'
                        }
                    }
                );

                if (!parcelRes.ok) throw new Error(`Parcel API failed with status ${parcelRes.status}`);

                const parcelJson = await parcelRes.json();
                const parcelInfo = parcelJson?.result?.[0];
                if (!parcelInfo) {
                    console.log('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô');
                    return;
                }
                console.log('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô:', parcelInfo);

                const geoParams = new URLSearchParams({
                    viewparams: `utmmap:${parcelInfo.utm1}${parcelInfo.utm2}${parcelInfo.utm3}`,
                    service: 'WMS',
                    version: '1.1.1',
                    request: 'GetFeatureInfo',
                    layers: 'LANDSMAPS:V_PARCEL47,LANDSMAPS:V_PARCEL48',
                    bbox: `${parcelInfo.parcellon},${parcelInfo.parcellat},${(Number(parcelInfo.parcellon) + 0.000001).toFixed(6)},${(Number(parcelInfo.parcellat) + 0.000001).toFixed(6)}`,
                    width: '256',
                    height: '256',
                    srs: 'EPSG:4326',
                    query_layers: 'LANDSMAPS:V_PARCEL47,LANDSMAPS:V_PARCEL48',
                    info_format: 'application/json',
                    x: '128',
                    y: '128'
                });
                const url = `https://landsmaps.dol.go.th/geoserver/LANDSMAPS/wms?${geoParams}`;
                console.log(url)

                divTxt.innerText = url;
                divTxt.onclick = copyTextFromDiv;
            }

        }
    });
});
